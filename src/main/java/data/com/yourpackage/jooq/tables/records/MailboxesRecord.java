/*
 * This file is generated by jOOQ.
 */
package com.yourpackage.jooq.tables.records;


import com.yourpackage.jooq.tables.Mailboxes;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MailboxesRecord extends UpdatableRecordImpl<MailboxesRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.mailboxes.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.mailboxes.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.mailboxes.opened</code>.
     */
    public void setOpened(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.mailboxes.opened</code>.
     */
    public String getOpened() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.mailboxes.unread</code>.
     */
    public void setUnread(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.mailboxes.unread</code>.
     */
    public String getUnread() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.mailboxes.sent</code>.
     */
    public void setSent(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.mailboxes.sent</code>.
     */
    public String getSent() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Mailboxes.MAILBOXES.ID;
    }

    @Override
    public Field<String> field2() {
        return Mailboxes.MAILBOXES.OPENED;
    }

    @Override
    public Field<String> field3() {
        return Mailboxes.MAILBOXES.UNREAD;
    }

    @Override
    public Field<String> field4() {
        return Mailboxes.MAILBOXES.SENT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getOpened();
    }

    @Override
    public String component3() {
        return getUnread();
    }

    @Override
    public String component4() {
        return getSent();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getOpened();
    }

    @Override
    public String value3() {
        return getUnread();
    }

    @Override
    public String value4() {
        return getSent();
    }

    @Override
    public MailboxesRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public MailboxesRecord value2(String value) {
        setOpened(value);
        return this;
    }

    @Override
    public MailboxesRecord value3(String value) {
        setUnread(value);
        return this;
    }

    @Override
    public MailboxesRecord value4(String value) {
        setSent(value);
        return this;
    }

    @Override
    public MailboxesRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MailboxesRecord
     */
    public MailboxesRecord() {
        super(Mailboxes.MAILBOXES);
    }

    /**
     * Create a detached, initialised MailboxesRecord
     */
    public MailboxesRecord(Integer id, String opened, String unread, String sent) {
        super(Mailboxes.MAILBOXES);

        setId(id);
        setOpened(opened);
        setUnread(unread);
        setSent(sent);
        resetChangedOnNotNull();
    }
}
